plugins {
    id "com.github.node-gradle.node" version "7.0.2"
    id "run.halo.plugin.devtools" version "0.1.1"
    id "io.freefair.lombok" version "8.0.1"
    id 'java'
}

group 'run.halo.unsplash'
sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {

    implementation platform('run.halo.tools.platform:plugin:2.18.0-SNAPSHOT')
    compileOnly 'run.halo.app:api'

    testImplementation 'run.halo.app:api'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

node {
    nodeProjectDir = file("${project.projectDir}/console")
}

tasks.register('buildFrontend', PnpmTask) {
    args = ['build']
    dependsOn('installDepsForUI')
}

tasks.register('installDepsForUI', PnpmTask) {
    args = ['install']
}

build {
    // build frontend before build
    tasks.named('compileJava').configure {
        dependsOn('buildFrontend')
    }
}

tasks.register('generateApiKeysFile') {
    def outputDir = layout.buildDirectory.dir("resources/main").get().asFile
    def apiKeysFile = file("$outputDir/apiKeys.properties")

    doLast {
        if (!outputDir.exists()) {
            outputDir.mkdirs()
        }
        apiKeysFile.withWriter('UTF-8') { writer ->
            writer.writeLine("unsplash=${project.findProperty('unsplashApiKey') ?: ''}")
            writer.writeLine("pexels=${project.findProperty('pexelsApiKey') ?: ''}")
            writer.writeLine("pixabay=${project.findProperty('pixabayApiKey') ?: ''}")
        }

        println "API keys properties file generated at: $apiKeysFile"
    }
}

tasks.named("processResources").configure {
    dependsOn("generateApiKeysFile")
}

halo {
    version = "2.19.3"
}
